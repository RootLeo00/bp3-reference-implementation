- name: Set parameters
  ansible.builtin.set_fact:
    _k8s_cni_plugin: "{{ k8s.cni_plugin | default(default_k8s_cni_plugin) }}"
    _k8s_clusterName: " {{ k8s.clusterName | default(default_k8s_clusterName )}}"

- name: Create a certificate key
  shell: 'kubeadm certs certificate-key | tee certificate-key.pass'
  register: kubeadm_certificate_key
  become: true

- name: Create kubeadm configuration
  ansible.builtin.template:
    src: kubeadm_config.yaml.j2
    dest: ./kubeadm_config.yaml
  vars:
    - certificate_key: '{{ kubeadm_certificate_key.stdout_lines[0] }}'
    - kubelet_extra_args: "{{ {'enable-controller-attach-detach': 'false'} | combine(_kubelet_extra_args) }}"
- name: Reset k8s
  shell: "kubeadm reset -f --cri-socket {{ _criSocket }}"
  become: true

- name: Initialize the master node
  shell: 'kubeadm init --upload-certs --config kubeadm_config.yaml'
  register: kubeadm_init
  become: true

- name: Create kubeconfig directory
  become: true
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: "0755"
    owner: "{{ ansible_user }}"
    # group: "{{ ansible_user }}"
- name: Copy kubeconfig file
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    owner: "{{ ansible_user }}"
    # group: "{{ ansible_user }}"
    remote_src: yes
  become: true

- name: Deploy CNI
  include_tasks: "cni_{{_k8s_cni_plugin}}.yaml"

- name: Retrieve multus
  ansible.builtin.git:
    repo: https://github.com/k8snetworkplumbingwg/multus-cni.git
    dest: multus-cni
    version: v4.0.1
    force: yes

- name: Install multus
  kubernetes.core.k8s:
    state: present
    src: multus-cni/deployments/multus-daemonset.yml

- name: Install Node Feature Discovery
  shell: kubectl apply -k https://github.com/kubernetes-sigs/node-feature-discovery/deployment/overlays/default?ref=v0.15.4
