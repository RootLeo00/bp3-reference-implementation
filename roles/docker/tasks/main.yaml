#                                                            Prepare the machine
- name: Setup kernel
  ansible.builtin.include_role:
    name: kernel
  vars:
    kernel: "{{docker_kernel}}"

#                                                         Install docker runtime
- block:                                                          # must be root

  - name: Stop docker                              # Make sure docker is stopped
    ansible.builtin.service:
      name: docker
      state: stopped
    ignore_errors: true

  - name: Cleanup docker data root directory
    block:
    - name: Remove docker data root path
      ansible.builtin.file:
        path: '{{ docker.data_root }}'
        state: absent
    - name: Create empty docker data root directory
      ansible.builtin.file:
        path: '{{ docker.data_root }}'
        state: directory
    when: (docker.data_root is defined)

  - name: Download Docker key
    ansible.builtin.get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/keyrings/docker.asc
      mode: '0644'

  - name: Add repository into sources list
    ansible.builtin.apt_repository:
      repo: "deb [arch={{ [ansible_architecture] | map('extract', deb_architecture) | first }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
      state: present
      filename: docker
      
  - name: Install docker
    include_role:
      name: packages
    vars:
      packages:
        system_remove:
          - docker.io
          - docker-doc
          - docker-compose
          - docker-compose-v2
          - podman-docker
          - containerd
          - runc
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        system:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose
          - docker-compose-plugin
  become: true

#                                                               Configure docker
- block:                                                          # must be root
  - name: Operate docker on ramdisk machines
    block:
    - name: Cleanup docker systemd directory
      ansible.builtin.file:
        path: '/etc/systemd/system/docker.service.d/'
        state: absent
    - name: Create docker systemd directory
      ansible.builtin.file:
        path: '/etc/systemd/system/docker.service.d/'
        state: directory
    - name: Support ramdisk
      ansible.builtin.template:
        src: docker.service.d.j2
        dest: '/etc/systemd/system/docker.service.d/10-ramdisk.conf'
    when: hostvars[inventory_hostname]['ramdisk'] | default(false)

  - name: Custom docker systemd parameters
    block:
    - name: Cleanup docker directory
      ansible.builtin.file:
        path: '/etc/docker/'
        state: absent
    - name: Create docker directory
      ansible.builtin.file:
        path: '/etc/docker/'
        state: directory
    - name: Set daemon
      ansible.builtin.template:
        src: daemon.json.j2
        dest: '/etc/docker/daemon.json'
    when: (docker is defined)

  - name: Restart docker                           # Restart with a fresh docker
    ansible.builtin.service:
      name: docker
      state: restarted

  - name: Add '{{ ansible_user }}' to the docker group
    ansible.builtin.user:
      name: "{{ ansible_user }}"
      groups: docker
      append: yes

  - name: Reset SSH connection to allow user group changes to affect 'current login user'
    ansible.builtin.meta: reset_connection
  become: true

